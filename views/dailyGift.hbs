{{#if notYet}}
<div class="countDown">
  <p>Next package arrives in: 
    <span id="hrDec" class="number">0</span><span id="hrUni" class="number">0</span>
    <span>:</span>
    <span id="minDec" class="number">0</span><span id="minUni" class="number">0</span>
    <span>:</span>
    <span id="secDec" class="number">0</span><span id="secUni" class="number">0</span>
  </p>
</div>

<script>
  class Countdown {
    constructor() {
        this.userTime = {{user.timeStart}};
        this.currentTime= new Date().getTime();
        this.timeDifference=this.userTime - this.currentTime;
        this.intervalId;
    }
    setTime() {
        printHours();
        printMinutes();
        printSeconds();
    }

    increase() {
        this.timeDifference--;
        this.setTime();
    }

    startClick() {
        this.intervalId = setInterval(this.increase(), 1000);
    }

    getHours() {
        this.hours = Math.floor((this.timeDifference/ 3600000) % 24);
        this.splitHour= this.twoDigitsNumber(this.hours);
        return this.splitHour.split("");
    }
    getMinutes() {
        this.minutes = Math.floor((this.timeDifference/ 60000) % 60);
        this.splitMin = this.twoDigitsNumber(this.minutes);
        return this.splitMin.split("");
    }

    getSeconds() {
        this.seconds = Math.floor((this.timeDifference / 1000) % 60);
        this.splitSec = this.twoDigitsNumber(this.seconds);
        return this.splitSec.split("");
    }

    twoDigitsNumber(number) {
        if (number < 10) {
            return `0${number}`;
        } else {
            return `${number}`;
        }
    }
  }

function printMinutes() {
    let y = countdown.getMinutes();
    minDec.innerHTML = y[0];
    minUni.innerHTML = y[1];

}

function printSeconds() {
    let x = countdown.getSeconds();
    secDec.innerHTML = x[0];
    secUni.innerHTML = x[1];

}

function printHours() {
    let z = countdown.getHours();
    hrDec.innerHTML = z[0];
    hrUni.innerHTML = z[1];

}

function start() {
    let hrDec = document.getElementById('hrDec');
    let hrUni = document.getElementById('hrUni');
    let minDec = document.getElementById('minDec');
    let minUni = document.getElementById('minUni');
    let secDec = document.getElementById('secDec');
    let secUni = document.getElementById('secUni');
    countdown.startClick();
}
let countdown = new Countdown();
start();

</script>
{{else}}
<div class="wrapper">
  <div class="giftName">
    <h3>A bucket of roten brains</h3>
    <p>10 <i class="fas fa-brain fa-2x"></i></p>
  </div>
  <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="giftBox" x="0" y="0" viewBox="0 0 370.1 340.1" xml:space="preserve" enable-background="new 0 0 270.1 140.1">      
  <style>
      .s0{
      overflow:visible;
      }
      .s1{
      clip-path:url(#SVGID_1_);
      fill:#422020;
      }
      .s2{
      clip-path:url(#SVGID_1_);
      fill:#4C4C4E;
      }
      .s3{
      fill:#DBC667;
      }
      .s4{
      fill:#B61F2B;
      }
    </style>  

    <g id="Presents">
      <g id="PresentB" class="box">
        <ellipse id="ShadowPresent" class="PresentBoxShadow" cx="175" cy="150" rx="81.8" ry="22.8" fill="#959689"/>
        
        <g class="PresentBox">
          <rect x="130.8" y="72" width="106.2" height="89.5" fill="#422020"/>

          <rect x="120.8" y="57.9" width="123.9" height="25.1" fill="#8A0303" class="boxTop"/>
          <rect x="185" y="57.5" width="10.4" height="104" fill="#DBC667" class="ribbonSide"/>

          <g class="PresentBoxRibbon">
            <polygon points="190.7 57.2 175.9 40.8 164.8 52.7 184.4 63.6 " fill="#DBC667"/>
            <polygon points="190.5 57.3 204.6 40.2 216.2 51.5 197.2 63.4 " fill="#DBC667"/>
          </g>

        </g>
      </g>
    </g>

  </svg>
</div>

{{!-- <div class="nextPackage">
<p>Next package arrives in: {{user.hourLeft}}: {{user.minLeft}}: {{user.secLeft}}</p>
</div> --}}
{{/if}}
